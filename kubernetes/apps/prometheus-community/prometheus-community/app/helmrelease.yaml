---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "65.1.1"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    # Prometheus configuration
    prometheus:
      enabled: true
      prometheusSpec:
        retention: 30d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
        resources:
          requests:
            cpu: 200m
            memory: 400Mi
          limits:
            cpu: 1000m
            memory: 2Gi

    # Alertmanager configuration
    alertmanager:
      enabled: true
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi

    # Grafana configuration (included in the stack)
    grafana:
      enabled: true
      adminPassword: "${SECRET_GRAFANA_ADMIN_PASSWORD}"
      defaultDashboardsTimezone: "Europe/Athens"
      service:
        type: ClusterIP
        port: 80
      ingress:
        enabled: false
      persistence:
        enabled: false
      grafana.ini:
        server:
          root_url: "https://grafana.${SECRET_DOMAIN}"
          serve_from_sub_path: false
        security:
          allow_embedding: true
          cookie_secure: true
        auth:
          disable_login_form: false
        users:
          allow_sign_up: false
          auto_assign_org: true
          auto_assign_org_role: Viewer

    # Node Exporter
    nodeExporter:
      enabled: true

    # Kube State Metrics
    kubeStateMetrics:
      enabled: true

    # Prometheus Operator
    prometheusOperator:
      enabled: true

    # Default rules and alerts
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
